---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: podinfo-go-build
spec:
  workspaces:
    - name: shared
  params:
    - name: IMAGE_NAME
      type: string
      default: "podinfo"
    - name: GIT_REPO
      type: string
      default: "https://github.com/vjjmiras/podinfo"
    - name: GIT_REVISION
      type: string
      default: "demo-tekton"
    - name: APP_PATH
      type: string
      default: "podinfo"

  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: subdirectory
          value: "podinfo"
        - name: deleteExisting
          value: "true"
        - name: sslVerify
          value: "false"
      workspaces:
        - name: output
          workspace: shared

    - name: go-env
      taskRef:
        name: go-tool
        kind: Task
      workspaces:
        - name: source
          workspace: shared
      params:
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: ARGS
          value: "env -w GOPATH=$(workspaces.source.path)/go"
      runAfter:
        - fetch-repository

    - name: go-mod-download
      taskRef:
        name: go-tool
        kind: Task
      workspaces:
        - name: source
          workspace: shared
      params:
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: ARGS
          value: "mod download -x"
      runAfter:
        - go-env

    - name: go-build
      taskRef:
        name: go-tool
        kind: Task
      workspaces:
        - name: source
          workspace: shared
      params:
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: ARGS
          value: "build -a -o bin/podinfo -v -x cmd/podinfo/main.go"
      runAfter:
        - go-mod-download

#   - name: npm-lint
#     taskRef:
#       name: npm
#       kind: Task
#     workspaces:
#       - name: source
#         workspace: shared
#     params:
#       - name: CONTEXT
#         value: $(params.APP_PATH)
#       - name: ARGS
#         value: run lint
#     runAfter:
#       - npm-install

    - name: app-version
      taskRef:
        name: go-tool
        kind: Task
      workspaces:
        - name: source
          workspace: shared
      params:
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: ARGS
          value: run cmd/podinfo/main.go --version | tr -d '\n'
      runAfter:
        - go-build

    - name: build-image
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: registry.ocp4.example.com:8443/developer/$(params.IMAGE_NAME):$(tasks.app-version.results.output)
        - name: DOCKERFILE
          value: Containerfile
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: TLSVERIFY
          value: "false"
        - name: SKIP_PUSH
          value: "true"
      runAfter:
        - go-mod-download
        - go-build
        - app-version
      workspaces:
        - name: source
          workspace: shared


